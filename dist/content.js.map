{"version":3,"sources":["content.js"],"names":["console","log","darkButtonsClasses","addPlayButtonToVisibleElements","darkBgElements","document","getElementsByClassName","chrome","runtime","onMessage","addListener","message","trigger","previouslyPlayedElements","previousId","index","length","thePlayButton","querySelector","thePauseButton","theResumeButton","style","display","i","visibleElements","j","playButton","createElement","pauseButton","resumeButton","className","innerHTML","innerText","addEventListener","text","trim","sendMessage","type","id","appendChild","observer","MutationObserver","mutations","addedNodes","observe","body","childList","subtree"],"mappings":";AAAAA,QAAQC,IAAI,wCAQZ,MAAMC,EAAqB,4JAK3B,SAASC,IACP,MAAMC,EAAiBC,SAASC,uBAAuB,qBACvDC,OAAOC,QAAQC,UAAUC,YAAaC,IAEpC,GAAwB,gBAApBA,EAAQC,QAA2B,CACrC,MACMC,EADiBR,SAASC,uBAAuB,qBACPK,EAAQG,YAAYR,uBAAuB,WAE3F,IAAK,IAAIS,EAAQ,EAAGA,EAAQF,EAAyBG,OAAQD,IAAS,CACpE,MAAME,EAAgBJ,EAAyBE,GAAOG,cAAc,gBAC9DC,EAAiBN,EAAyBE,GAAOG,cAAc,iBAC/DE,EAAkBP,EAAyBE,GAAOG,cAAc,kBAEtEC,EAAeE,MAAMC,QAAU,OAC/BF,EAAgBC,MAAMC,QAAU,OAChCL,EAAcI,MAAMC,QAAU,YAQpC,IAAK,IAAIC,EAAI,EAAGA,EAAInB,EAAeY,OAAQO,IAAK,CAC9C,MAAMC,EAAkBpB,EAAemB,GAAGjB,uBAAuB,WACxCF,EAAemB,GAAGjB,uBAAuB,eAClE,IAAK,IAAImB,EAAI,EAAGA,EAAID,EAAgBR,OAAQS,IAE1C,IAAKD,EAAgBC,GAAGP,cAAc,kBAAmB,CAGvD,MAAMQ,EAAarB,SAASsB,cAAc,UACpCC,EAAcvB,SAASsB,cAAc,UACrCE,EAAexB,SAASsB,cAAc,UAG5CD,EAAWI,uCAAyC5B,IACpD0B,EAAYE,wCAA0C5B,IACtD2B,EAAaC,UAAY,8BAGzBJ,EAAWK,UAAY,8hBACvBH,EAAYG,UAAY,qQAGxBF,EAAaG,UAAY,SAGzBJ,EAAYP,MAAMC,QAAU,OAC5BO,EAAaR,MAAMC,QAAU,OAC7Bf,OAAOC,QAAQC,UAAUC,YAAaC,IACZ,aAApBA,EAAQC,UACVgB,EAAYP,MAAMC,QAAU,OAC5BO,EAAaR,MAAMC,QAAU,OAC7BI,EAAWL,MAAMC,QAAU,WAa/BI,EAAWO,iBAAiB,QAAS,KACnC,MAAMC,EAAO9B,EAAemB,GAAGS,UAAUG,OAEzC5B,OAAOC,QAAQ4B,YAAY,CAAEC,KAAM,OAAQH,KAAMA,EAAMI,GAAIf,IAE3DG,EAAWL,MAAMC,QAAU,OAC3BM,EAAYP,MAAMC,QAAU,UAG9BM,EAAYK,iBAAiB,QAAS,KACJ,QAA5BP,EAAWL,MAAMC,UACnBM,EAAYP,MAAMC,QAAU,OAC5BO,EAAaR,MAAMC,QAAU,QAC7Bf,OAAOC,QAAQ4B,YAAY,CAAEC,KAAM,aAIvCR,EAAaI,iBAAiB,QAAS,KACL,QAA5BP,EAAWL,MAAMC,UACnBO,EAAaR,MAAMC,QAAU,OAC7BM,EAAYP,MAAMC,QAAU,QAC5Bf,OAAOC,QAAQ4B,YAAY,CAAEC,KAAM,cAOvCb,EAAgBC,GAAGc,YAAYb,GAC/BF,EAAgBC,GAAGc,YAAYX,GAC/BJ,EAAgBC,GAAGc,YAAYV,KAOvC,MAAMW,EAAW,IAAIC,iBAAkBC,IAErC,IAAK,IAAInB,EAAI,EAAGA,EAAImB,EAAU1B,OAAQO,IAAK,CACxBmB,EAAUnB,GAEdoB,WAAW3B,OAAS,GAE/Bb,OAONqC,EAASI,QAAQvC,SAASwC,KAAM,CAC9BC,WAAW,EACXC,SAAS,IAIX5C","file":"content.js","sourceRoot":"../src","sourcesContent":["console.log(\"console of content script is working\");\n\n\n\n// Background color\n// chrome.tts.speak('Hello, world! How can i make this work effectively without the troubles i keep facing. I am currently hungry and i need this to work please');\n\n\nconst darkButtonsClasses = \"p-1 rounded-md hover:bg-gray-100 hover:text-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-gray-200 disabled:dark:hover:text-gray-400\"\n\n\n\n// function to add \"Play\" button to elements with class \"visible\"\nfunction addPlayButtonToVisibleElements() {\n  const darkBgElements = document.getElementsByClassName('dark:bg-[#444654]');\n  chrome.runtime.onMessage.addListener((message) => {\n    \n    if (message.trigger === \"interrupted\") {\n      const darkBgElements = document.getElementsByClassName('dark:bg-[#444654]');\n      const previouslyPlayedElements = darkBgElements[message.previousId].getElementsByClassName('visible')\n\n      for (let index = 0; index < previouslyPlayedElements.length; index++) {\n        const thePlayButton = previouslyPlayedElements[index].querySelector('.play-button')\n        const thePauseButton = previouslyPlayedElements[index].querySelector('.pause-button')\n        const theResumeButton = previouslyPlayedElements[index].querySelector('.resume-button')\n  \n        thePauseButton.style.display = 'none'\n        theResumeButton.style.display = 'none'\n        thePlayButton.style.display = 'block'\n        \n      }\n      \n\n    }\n  });\n\n  for (let i = 0; i < darkBgElements.length; i++) {\n    const visibleElements = darkBgElements[i].getElementsByClassName('visible');\n    const sentenceElements = darkBgElements[i].getElementsByClassName('break-words');\n    for (let j = 0; j < visibleElements.length; j++) {\n      // check if the element already has a \"Play\" button\n      if (!visibleElements[j].querySelector('.speech-button')) {\n        \n        // Create speech buttons\n        const playButton = document.createElement('button');\n        const pauseButton = document.createElement('button');\n        const resumeButton = document.createElement('button');\n        \n        // Assign classnames\n        playButton.className = `speech-button play-button ${darkButtonsClasses}`;\n        pauseButton.className = `speech-button pause-button ${darkButtonsClasses}`;\n        resumeButton.className = 'speech-button resume-button';\n        \n        // Inner text\n        playButton.innerHTML = '<svg stroke=\"currentColor\" fill=\"none\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"h-4 w-4\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 75 75\"><path d=\"M39.389,13.769 L22.235,28.606 L6,28.606 L6,47.699 L21.989,47.699 L39.389,62.75 L39.389,13.769z\" style=\"stroke:#111;stroke-width:5;stroke-linejoin:round;\" /><path d=\"M48,27.6a19.5,19.5 0 0 1 0,21.4M55.1,20.5a30,30 0 0 1 0,35.6M61.6,14a38.8,38.8 0 0 1 0,48.6\" style=\"fill:none;stroke:#111;stroke-width:5;stroke-linecap:round\"/></svg>';\n        pauseButton.innerHTML = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><rect x=\"6\" y=\"4\" width=\"4\" height=\"16\" stroke=\"#000\" stroke-width=\"2\" fill=\"none\"/><rect x=\"14\" y=\"4\" width=\"4\" height=\"16\" stroke=\"#000\" stroke-width=\"2\" fill=\"none\"/></svg>';\n        // playButton.innerText = 'Play';\n        // pauseButton.innerText = 'Pause';\n        resumeButton.innerText = 'Resume';\n        \n        // declare displays\n        pauseButton.style.display = 'none'\n        resumeButton.style.display = 'none'\n        chrome.runtime.onMessage.addListener((message) => {\n          if (message.trigger === \"finished\") {\n            pauseButton.style.display = 'none'\n            resumeButton.style.display = 'none'\n            playButton.style.display = 'block'\n          }\n\n          // if (message.trigger === \"reading\") {\n          //   console.log(message.characterIndex);\n\n            \n          // }\n          \n        });\n        \n        \n        // event listeners\n        playButton.addEventListener('click', () => {\n          const text = darkBgElements[i].innerText.trim();\n\n          chrome.runtime.sendMessage({ type: 'play', text: text, id: i });\n          \n          playButton.style.display = 'none'\n          pauseButton.style.display = 'block'\n        });\n        \n        pauseButton.addEventListener('click', () => {\n          if (playButton.style.display == 'none') {\n            pauseButton.style.display = 'none'\n            resumeButton.style.display = 'block'\n            chrome.runtime.sendMessage({ type: 'pause' });\n            \n          }\n        })\n        resumeButton.addEventListener('click', () => {\n          if (playButton.style.display == 'none') {\n            resumeButton.style.display = 'none'\n            pauseButton.style.display = 'block'\n            chrome.runtime.sendMessage({ type: 'resume' });\n            \n          }\n        })\n        \n        \n        // Add buttons to page\n        visibleElements[j].appendChild(playButton);\n        visibleElements[j].appendChild(pauseButton);\n        visibleElements[j].appendChild(resumeButton);\n      }\n    }\n  }\n}\n\n// create a MutationObserver to watch for changes to the page\nconst observer = new MutationObserver((mutations) => {\n  // for each mutation\n  for (let i = 0; i < mutations.length; i++) {\n    const mutation = mutations[i];\n    // if the mutation added nodes\n    if (mutation.addedNodes.length > 0) {\n      // add \"Play\" button to visible elements\n      addPlayButtonToVisibleElements();\n\n    }\n  }\n});\n\n// start observing the page for changes\nobserver.observe(document.body, {\n  childList: true, // observe changes to the child nodes of the body element\n  subtree: true, // observe changes to the entire page\n});\n\n// add \"Play\" button to visible elements on initial page load\naddPlayButtonToVisibleElements();\n"]}